<!DOCTYPE html SYSTEM "/home/dalyw/xml/html-wld/html5.dtd" >
<html>
  <head>
    <title>Cotrugli Application Program Interface</title>
  </head>
  <body>
    <!-- <h1>Cotrugli Application Program Interface</h1> -->

    <h2>Summary</h2>

    <p class="first">
      Cotrugli is an experimental accounting application written in
      GNU-APL that uses PostgreSQL to manage its database.
    </p>

<p>At this writing, Seventh Month 2021, it will create a trial balance
and allow one to adjust that that trial balance using an application
program interface (API).  Users well versed in GNU-APL can enter and adjust
that trial balance by using the API.</p>

<p>There is much work to be done and I am looking for volunteers.</p>


<h2>Data Model</h2>

<p class="first">Cotrugli stores its data in a PostgreSQL database and uses GNU APL's
library 5 SQL workspace.  At the start of a session one should make
the connection to PostgreSQL and store the database handle against
need.</p>

<pre class="example">
database_handle←ctrgl_sql_connect server username dbname password
</pre>

<p>The data model consists of six tables:</p>

<ol>
<li>Configuration</li>
<li>Journal</li>
<li>Company</li>
<li>Period</li>
<li>Chart of Accounts</li>
<li>Documents</li>
</ol>

<h3>Configuration</h3>

<p class="first">The configuration table is a collection of name -- value pairs used
throughout the system</p>


<h3>Journal</h3>

<p class="first">Accountants use Journals to group entries generated by specific
transaction cycles.  Examples of such cycles are Sales, Cash Receipts,
and Cash Disbursements.  In hand posted systems each journal was a
spreadsheet organized to simplify entry.</p>

<p>Although several journals are included in the examples the API
supports only the General Journal.</p>

<p>Fields in the Journal table are:</p>

<ul>
<li>Code</li>
<li>Name</li>
</ul>


<h3>Company</h3>

<p class="first">Cotrugli allows recording the transactions of multiple companies and
this table defines those companies.</p>

<p>Fields in the Company table are:</p>

<ul>
<li>Code</li>
<li>Name</li>
</ul>


<h3>Periods</h3>

<p class="first">Accounting transactions are stored by period and trial balances are
prepared as of the end of a period. Each company has its own set of
periods.</p>

<p>Fields in the Periods table are:</p>

<ul>
<li>Company code</li>
<li>Period</li>
<li>Begin date</li>
<li>End date</li>
</ul>


<h3>Chart of accounts</h3>

<p class="first">A chart of accounts is a list of the categories that can be used to
accumulate the totals of transactions. Each company has a separate
chart of accounts.  Each account is defined with four data:</p>

<ol>
<li>Account number</li>
<li>Title</li>
<li>account type (one of b, r, or i)</li>
<li>sign type (one of d or c)</li>
</ol>

<p>Account numbers are used to provide a logical order to the accounts
and title describe what should be included in an account.</p>

<p>An account should be one of three types:</p>

<ol>
<li>Balance sheet or 'b'</li>
<li>Income or 'i'</li>
<li>Retained Earnings or 'r'</li>
</ol>

<p>The basic accounting equation is Assets are equal to Liabilities plus
Equity and a Balance Sheet displays that requirement.  That is it
first lists and totals the assets, then lists and totals the
liabilities, then lists and totals the equity accounts and finally
totals liabilities and equity.</p>

<p>Retained Earnings is a special equity account that is posted as the
final document of the year with the total of the income accounts.  The
income accounts are then reset to zero.</p>

<p>The balance in each account is displayed as either a positive or
negative number based on where it falls in the basic accounting
equation.</p>

<p>Assets show positive balances when the debits exceed the credits.
Liabilities and Equity show positive balance when the credits exceed
the debits.</p>

<p>For income accounts revenue (which increases equity) shows a positive
credit balance, while expense (which decrease equity) show a positive
debit balance.</p>

<p>This leads us to the account's sign type. It is one of 'd' for debit
or 'c' for credit.</p>

<p>These two flags should therefore be set as follows</p>

<table class="muse-table" border="2" cellpadding="5">
<thead>
<tr>
<th>Accounting Equation</th>
<th>acct_type</th>
<th>sign_type</th>
</tr>
</thead>
<tbody>
<tr>
<td>Asset</td>
<td>b</td>
<td>d</td>
</tr>
<tr>
<td>Liability</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>Equity</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>Retained earnings</td>
<td>r</td>
<td>c</td>
</tr>
<tr>
<td>Revenue</td>
<td>i</td>
<td>c</td>
</tr>
<tr>
<td>Expense</td>
<td>i</td>
<td>d</td>
</tr>
</tbody>
</table>


<h3>Document</h3>

<p class="first">A document is the basic building block of cotrugli and should be used
to record each transaction (a check or an invoice for example) each
document consists of a header that has information about the
transaction and a body which records the financial effect of the
transaction. Cotrugli is a double entry accounting system.  That is
each document must contain at lease two lines and any amount is
identified as either a debit or a credit.  The total of the debit
lines must equal the total of the credit lines.</p>

<p>There are in fact two database tables document and doc_lines. Document
fields are:</p>

<ul>
<li>doc_id</li>
<li>company</li>
<li>journal</li>
<li>name</li>
<li>doc_date</li>
<li>description</li>
<li>period</li>
</ul>

<p>Doc_lines fields are:</p>

<ul>
<li>doc_id</li>
<li>line_no</li>
<li>acct_no</li>
<li>debit</li>
<li>credit</li>
<li>company</li>
</ul>



<h2>Reports</h2>

<p class="first">There is a group of functions which return a report.  Cotrugli uses APL
Library's wp workspace for reports and these function return a wp
instance.  wp∆txt∆assemble returns a text report suitable for display
in a terminal window while wp∆html∆assemble returns an HTML page.</p>

<p>Reporting functions begin with 'ctrgl_open' and can be listed with</p>

<pre class="example">
)fns ctrgl_open
ctrgl_open_account      ctrgl_open_chart
ctrgl_open_company      ctrgl_open_config
ctrgl_open_journals     ctrgl_open_periods
ctrgl_open_tb
</pre>

<h3>ctrgl_open_config</h3>

<p class="first">Function returns a report of configuration name--value pairs</p>

<pre class="example">
⍞←wp∆txt∆assemble ctrgl_open_config database_handle
</pre>


<h3>ctrgl_open_company</h3>

<p class="first">Functions returns a report of defined companies</p>

<pre class="example">
⍞←wp∆txt∆assemble ctrgl_open_company database_handle
</pre>


<h3>ctrgl_open_periods</h3>

<p class="first">Function prepares a workpaper showing the periods defined for a
company.</p>

<pre class="example">
⍞←wp∆txt∆assemble database_handle ctrgl_open_periods company_code
</pre>


<h3>ctrgl_open_journals</h3>

<p class="first">Function prepares a workpaper showing the defined periods.</p>

<pre class="example">
⍞←wp∆txt∆assemble ctrgl_open_journals database_handle
</pre>


<h3>ctrgl_open_chart</h3>

<p class="first">Function returns a workpaper showing a company's chart of accounts.</p>

<pre class="example">
⍞←wp∆txt∆assemble database_handle ctrgl_open_chart company
</pre>


<h3>ctrgl_open_tb</h3>

<p class="first">Function returns a trial balance workpaper</p>

<pre class="example">
⍞←wp∆txt∆assemble database_handle ctrgl_open_tb company period
</pre>


<h3>ctrgl_open_account</h3>

<p class="first">Function returns a report showing the transactions that have been
posted to an account.</p>

<pre class="example">
⍞←wp∆txt∆assemble database_handle ctrgl_open_account company period acct_no
</pre>



<h2>Maintenance</h2>

<h3>Config table</h3>

<h4>ctrgl_config_post</h4>

<p class="first">Function to post a name -- value pair to the config table.</p>

<pre class="example">
database_handle ctrgl_config_post name value
</pre>



<h3>Company table</h3>

<h4>ctrgl_company_post</h4>

<p class="first">Function posts a company to the company table</p>

<pre class="example">
database_handle ctrgl_company_post company_code company_name
</pre>




<h3>Period table</h3>

<h4>ctrgl_period_post</h4>

<p class="first">Function posts a period to the period table.</p>

<pre class="example">
database_handle ctrgl_period_post company period begin_date end_date
</pre>



<h3>Journal table</h3>

<h4>ctrgl_jrnl_post</h4>

<p class="first">Function to create or update a journal.</p>

<pre class="example">
database_handle ctrgl_jrnl_post journal_code journal_name
</pre>



<h3>Chart of Accounts</h3>


<h3>ctrgl_chart_fetch</h3>

<p class="first">Function returns a record from the chart of accounts.</p>

<pre class="example">
acct←database_handle ctrgl_chart_fetch company acct_no
</pre>


<h3>ctrgl_chart_post</h3>

<p class="first">Function posts an account to the chart of accounts.  Existing account
will be overwritten.</p>

<pre class="example">
database_handle ctrgl_chart_post company acct_no title acct_type sign_type
</pre>



<h2>Document</h2>

<h3>ctrgl_doc_init</h3>

<p class="first">Function creates a document from a vector of company, journal, name,
date, description and period.</p>

<pre class="example">
doc←ctrgl_doc_init doc_hd company journal name date description period
</pre>


<h3>ctrgl_doc_debit</h3>

<p class="first">Function adds or replaces a debit line to a document. The descision to
add or replace is based on the account number.</p>

<pre class="example">
doc←doc ctrgl_doc_debit acct_no debit
</pre>


<h3>ctrgl_doc_credit</h3>

<p class="first">Function adds or replaces a credit line to a document.</p>

<pre class="example">
doc←doc ctrgl_doc_credit acct_no credit
</pre>


<h3>ctrgl_doc_newLine</h3>

<p class="first">Function appends a new line or replaces and old line (based on the
account account number) in a document. It is called by ctrgl_doc_debit
and ctrgl_doc_credit.</p>

<p>A document line is a vector of doc_id (assigned by the system), line
number, account number, debit, and credit.</p>

<p>ctrgl_doc_newLine may be used in lieu of ctrgl_doc_debit or
ctrgl_doc_credit.  ctrgl_doc_post will populate the doc_id fields in
the database.</p>

<pre class="example">
doc←doc ctrgl_doc_newLine 0 line_no acct_no debit credit
</pre>


<h3>ctrgl_doc_delLine</h3>

<p class="first">Function removes the line in the document for the given account
number.</p>

<pre class="example">
doc←doc ctrgl_doc_delLine acct_no
</pre>


<h3>ctrgl_doc_post</h3>

<p class="first">Function posts a document to the database.</p>

<pre class="example">
database_handle ctrgl_doc_post doc
</pre>


<h3>ctrgl_doc_show</h3>

<p class="first">Function returns the document as a text vector suitable for
printing. The function looks up the account titles in the database and
a handle must be supplied.</p>

<pre class="example">
⍞←database_handle ctrgl_doc_show doc
</pre>




<!-- Page published by Emacs Muse ends here -->
</body>
</html>
